from datetime import date
import discord
from random import randint
import calendar
from discord.ext import commands
from discord.utils import get
import time
import os
import random
import Database
client = commands.Bot(command_prefix = 'v.')

@client.event
async def on_ready():
    print('Connect√©e')
    await client.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="moi ! Je ne fais office que de pr√©sence üòé"))
async def on_message(message):
    #Le bot ajoute une r√©action saluant la personne qui dit bonjour
    if "Bonjour" in message.content or "Coucou" in message.content or "bonjour" in message.content or "bvn" in message.content or "slt" in message.content or "Salut" in message.content or "salut" in message.content or "Slt" in message.content or "Bienvenue" in message.content or "bienvenue" in message.content or "Hi" in message.content or "hi" in message.content or "Hello" in message.content or "hello" in message.content:
        await message.add_reaction("<:Coucou:865883301814599681>")

class MyClient(discord.Client):
    async def on_message(self, message):
        # we do not want the bot to reply to itself
        if message.author.id == self.user.id:
            return





    
@client.command()
async def here(ctx):
    """Le check in du bot"""
    if ctx.channel.id == 397378707960102922 or ctx.channel.id == 827971395731324969:
        role = discord.utils.get(ctx.guild.roles, name="Inscrit")
        checkin = discord.utils.get(ctx.guild.roles, name="Checked In")
        if checkin in ctx.author.roles:
            await ctx.send("Vous avez d√©j√† confirm√© votre pr√©sence !")
        else:
            if role in ctx.author.roles:
                await ctx.send("Merci d'avoir v√©rifi√© votre pr√©sence pour l'√©v√©nement de la semaine <@!{}> !".format(ctx.author.id))
                await ctx.author.add_roles(checkin)
            else:
                await ctx.send("Soyez sur d'√™tre inscrit avant de confirmer votre pr√©sence. Pour vous inscrire, effectuez la commande ``v.inscription``")
            

@client.command()
async def inscription(ctx):
    """S'inscrit √† un certain event"""
    if ctx.channel.id == 397378707960102922 or ctx.channel.id == 827971395731324969:
        role = discord.utils.get(ctx.guild.roles, name="Inscrit")
        if role in ctx.author.roles:
            await ctx.send("Vous vous √™tes d√©j√† inscrit <@!{}> !".format(ctx.author.id))
        else:
            await ctx.send("Vous √™tes d√©sormais inscrit √† l'√©v√©nement de la semaine <@!{}> !".format(ctx.author.id))
            await ctx.author.add_roles(role)

@client.command()
async def test(ctx):
    """Commande de test de Zratey"""
    if ctx.author.id == 323147727779397632: #Check if it's Zratey
        untest = await ctx.send("test")
        await untest.add_reaction('üëç')
        def check(reaction,emoji):
            return reaction.message.id == untest.id and str(reaction.emoji) == 'üëç'
        reaction, reaction_bot = await client.wait_for('reaction_add', check=check, timeout=60)
        if reaction_bot.id == untest.author.id:
            try:
                reaction, user = await client.wait_for('reaction_add', check=check, timeout=60)
                await ctx.send("Complete")
            except:
                await ctx.send("Commande interrompu. Vous avez pris trop de temps pour r√©pondre")
    else:
        await ctx.send("Seul Zratey est autoris√© √† utiliser cette commande")

@client.command()
async def clear(ctx, nombre : int):
    """Supprime un certain nombre de messages selon le nombre indiqu√©. Cette commande est accessible seulement par les membres de la mod√©ration"""
    role = discord.utils.get(ctx.guild.roles, name="Chefs cuisiniers üç¥")
    if role in ctx.author.roles:
        messages = await ctx.channel.history(limit = nombre + 1).flatten()
        for message in messages :
            await message.delete()
        clear_done = await ctx.send("{} messages ont √©t√© effac√©s avec succ√®s".format(nombre))
        time.sleep(10)
        await clear_done.delete()
    else:
        await ctx.send("Vous n'avez pas les permissions pour executer cette commande")

@client.command()
async def event(ctx):
    """Permet d'√™tre notifi√© quand une information est transmise √† propos d'un event organis√© sur le serveur"""
    if ctx.channel.id == 397378707960102922 or ctx.channel.id == 397367943769358338:
        role = discord.utils.get(ctx.guild.roles, name="Event")
        if role in ctx.author.roles:
            await ctx.send("Vous avez d√©j√† le role !")
        else:
            await ctx.send("Vous avez obtenu le role event <@!{}> ! Vous serez ping √† chaque fois qu'un nouvel event se d√©roulera :)".format(ctx.author.id))
            await ctx.author.add_roles(role)

@client.command()
async def kick(ctx, userName: discord.Member, raison):
    """Commande accessible seulement √† la mod√©ration de BDN permettant de kick une personne"""
    role = discord.utils.get(ctx.guild.roles, name="Chefs cuisiniers üç¥")
    if role in ctx.author.roles:
        await kick(userName, reason=raison)
        await client.channel.send("{userName} a √©t√© kick du serveur")
        
    else:
        raison="A essay√© de faire son malin en voulant tester la commande de kick"
        await ctx.author.send("{0.author.mention}, Merci de ta contribution dans la 'science' voici le lien pour revenir : https://discord.gg/Pds2TyRr ")
        await kick(ctx.author, reason=raison)
        await ctx.channel.send("Vous n'avez normalement pas l'authorisation de kick quelqu'un. Donc je vous ait kick :) Ca vous apprendra")

@client.command()
async def ball(ctx):
    """Litt√©ralement un 8ball"""
    eightballrandom = randint(1,8)
    if eightballrandom == 1:
        await ctx.send("Oui")
    elif eightballrandom == 2:
        await ctx.send("Non")
    elif eightballrandom == 3:
        await ctx.send("Peut √™tre")
    elif eightballrandom == 4:
        await ctx.send("Surement")
    elif eightballrandom == 5:
        await ctx.send("Laisse moi r√©fl√©chir...")
        time.sleep(5)
        await ctx.send("Un peu d√©bile comme question non ?")
    elif eightballrandom == 6:
        await ctx.send("Je n'ai pas l'autorisation de r√©pondre √† une tel question")
    elif eightballrandom == 7:
        await ctx.send("Je n'en suis pas si s√ªre...")
    elif eightballrandom == 8:
        await ctx.send("Pour le savoir, essais de le r√©soudre par toi m√™me !")
        time.sleep(10)
        tentative_don = await ctx.send("Tu peux me payer 10$ sinon pour r√©pondre √† cette question ")
        time.sleep(2)
        await tentative_don.delete()

@client.command()
#recherche sur Google
async def google(ctx):
    """Permet de faire une recherche rapide sur Google √† partir d'une simple commande"""
    txt = ctx.message.content
    txt = txt[9:]
    txt2 =""
    for x in txt:
        if x == " ":
            txt2=txt2+"_"
        else:
            txt2=txt2+x
    await ctx.channel.send("Voil√† le r√©sultat de votre recherche via le moteur de recherche Google : https://www.google.com/search?q={}".format(txt2))
    await ctx.channel.send("Peut √™tre que la d√©finition de ce que vous cherchez est sur Urban Dictionay ? Essayez la commande ``v.meaning``")

@client.command()
async def wiki(ctx):
    """Permet de faire une recherche rapide sur Wikip√©dia √† partir d'une simple commande"""
    txt = ctx.message.content
    txt = txt[7:]
    txt2 =""
    for x in txt:
        if x == " ":
            txt2=txt2+"_"
        else:
            txt2=txt2+x
    await ctx.channel.send("Voil√† le r√©sultat de votre recherche via Wikip√©dia : https://fr.wikipedia.org/w/index.php?search={}".format(txt2))
    await ctx.channel.send("Si rien ne s'affiche, cela veux dire que ce que vous avez recherch√© n'existe pas sur Wikip√©dia. Essayez une simple recherche internet avec ``v.google``")
@client.command()
async def meaning(ctx):
    """Permet de faire une recherche rapide sur Urban Dictionnary √† partir d'une simple commande"""
    txt = ctx.message.content
    txt = txt[10:]
    txt2 =""
    for x in txt:
        if x == " ":
            txt2=txt2+"_"
        else:
            txt2=txt2+x
    await ctx.channel.send("Voil√† le r√©sultat de votre recherche via Urban Dictionnary : https://www.urbandictionary.com/define.php?term={}".format(txt2))
    await ctx.channel.send("Sa d√©finition n'existe peut √™tre pas sur Urban Dicrionnary, donc pourquoi pas faire votre propre recherche ? Essayez la commande ``v.google``")

@client.command()
async def gamemode(ctx):
    """Cheat code"""
    await ctx.channel.send("`Java Error occured : Java is not installed in this current system because, man, je suis un Bot Discord pas l'invit√© de commande MineCraft`")

# -------------------------------------------------------------- DATABASE ----------------------------------------------------------------

def verification(id):
    #v√©rifie dans la base de donn√©e
    test=Database.testUser(id)
    if test == 2 :
        #Le compte existe
        return True
    else :
        #Le compte n'existe pas
        return False

@client.command()
async def setup(ctx):
    Creation=Database.creataccount(ctx.author.id)
    if Creation == 1 :
        await ctx.channel.send("Le compte a √©t√© ajout√©")
    else :
        await ctx.channel.send("Vous avez d√©j√† un compte")
@client.command()
async def profile(ctx):
    """Montre le profile de l'utilisateur, en apportant des √©l√©ments d'informations divers et vari√©s"""
    test=verification(ctx.author.id)
    if test :
        info = Database.info(ctx.author.id)
        embedVar = discord.Embed(color=discord.Color.blue())
        embedVar.set_author(name="Profile de {}".format(ctx.author), icon_url="{}".format(ctx.author.avatar_url))
        embedVar.add_field(name="Identifiant Discord", value="{}".format(ctx.author.id), inline=False)
        embedVar.add_field(name="Money en banque", value="{}<:coquillette:802972160364249119>".format(info[4]), inline=True)
        date=ctx.author.created_at
        date=date.strftime("%d/%m/%Y, %H:%M:%S")
        embedVar.add_field(name="Date de cr√©ation du compte Discord", value="{}".format(date), inline=True)
        date=ctx.author.joined_at
        date=date.strftime("%d/%m/%Y, %H:%M:%S")
        embedVar.add_field(name="Date o√π vous avez rejoint ce serveur", value="{}".format(date), inline=True)
        embedVar.add_field(name="Role principal", value="{}".format(ctx.author.top_role.mention), inline=True)
        embedVar.add_field(name="Cr√©ation compte V√©ronica", value="{}".format(info[6]), inline=True)
        embedVar.add_field(name="Niveau d'experience", value="Niveau {}".format(info[1]), inline=True)
        await ctx.send(embed=embedVar)
    else : 
        print("je suis dans le false de user info")
        await ctx.channel.send("Merci de faire un v.setup pour cr√©er un compte")
@client.command()
async def delete(ctx):
    test=verification(ctx.author.id)
    if test :
        info = Database.deletecompte(ctx.author.id)
    else : 
        print("je suis dans le false de delete")
        await ctx.channel.send("Merci de faire un v.setup pour cr√©er un compte")

@client.command()
async def daily(ctx): 
    test=verification(ctx.author.id)
    if test:
        info = Database.daily(ctx.author.id)
        if info == 0:
            await ctx.channel.send("Cela ne fait pas 24h que vous avez effectu√© la commande. Veuillez patienter")
        else:
            await ctx.channel.send("Votre argent a √©t√© cr√©diter. Votre solde actuel est de {}<:coquillette:802972160364249119>".format(info))
    else : 
        await ctx.channel.send("Merci de faire un v.setup pour cr√©er un compte")

# -------------------------------------------------------------- FIN DATABASE ----------------------------------------------------------------
@client.command()
async def pdp(ctx):
    embedVar = discord.Embed(color=discord.Color.blue())
    embedVar.add_field(name="Commande r√©alis√©e par {}".format(ctx.author), value="Voici votre photo de profile", inline=False)
    embedVar.set_image(url="{}".format(ctx.author.avatar_url))
    await ctx.send(embed=embedVar)

filetoken = open(f"E:\\V√©ronica\\token.txt", "r")
for x in filetoken:
    token=x
filetoken.close()
client.run(token)
